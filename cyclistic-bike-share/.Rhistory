#importing needed libraries
library(tidyverse)
library(lubridate)
library(geosphere)
library(janitor)
library(ggmap)
library(tidyverse)
library(lubridate)
library(geosphere)
library(janitor)
library(ggplot2)
library(readr)
library(knitr)
#loading our dataset
df1 <- read_csv('Cyclistic Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic Bike-Share_Dataset/20208-divvy-tripdata.csv')
df1
#loading our dataset
df1 <- read_csv('Cyclistic Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic-Bike-Share/Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic-Bike-Share/Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
df1
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/20208-divvy-tripdata.csv')
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/202008-divvy-tripdata.csv')
df1
#importing needed libraries
library(tidyverse)
library(lubridate)
library(geosphere)
library(janitor)
library(ggplot2)
library(readr)
library(knitr)
library(dplyr)
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/202008-divvy-tripdata.csv')
df2 <- read_csv('Cyclistic_Bike-Share_Dataset/202009-divvy-tripdata.csv')
df3 <- read_csv('Cyclistic_Bike-Share_Dataset/202010-divvy-tripdata.csv')
df4 <- read_csv('Cyclistic_Bike-Share_Dataset/202011-divvy-tripdata.csv')
df5 <- read_csv('Cyclistic_Bike-Share_Dataset/202012-divvy-tripdata.csv')
df6 <- read_csv('Cyclistic_Bike-Share_Dataset/202101-divvy-tripdata.csv')
df7 <- read_csv('Cyclistic_Bike-Share_Dataset/202102-divvy-tripdata.csv')
df8 <- read_csv('Cyclistic_Bike-Share_Dataset/202103-divvy-tripdata.csv')
df9 <- read_csv('Cyclistic_Bike-Share_Dataset/202104-divvy-tripdata.csv')
df10 <- read_csv('Cyclistic_Bike-Share_Dataset/202105-divvy-tripdata.csv')
df11 <- read_csv('Cyclistic_Bike-Share_Dataset/202106-divvy-tripdata.csv')
df12 <- read_csv('Cyclistic_Bike-Share_Dataset/202107-divvy-tripdata.csv')
#checking the variable type of our tables
str(df1)
str(df2)
str(df3)
str(df4)
str(df5)
str(df6)
str(df7)
str(df8)
str(df9)
str(df10)
str(df11)
str(df12)
#now that we see that all our table have uniform variable types for all columns
#We co ahead to join all tables together
df <- rbind(df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11, df12)
glimpse(df)
dim(df)
# Now that we have our combined table to be df, let us go ahead to do some data cleaning
#We will start by removing the columns we do not need for our analysis.
df <- df %>%
select(-c(start_station_id, end_station_id, start_lat, start_lng, end_lat, end_lng))
#Now let us check the columns we have now
glimpse(df)
#Now let us go ahead to filter out where we have missing values
#We are supposed to get the ride_length by calculate the time difference, but I already did that in the spreadsheet of the dataset
#So we will just go ahead to check if there is any missing value in our ride_length column
#Now let us go ahead to filter out where we have missing values
#We are supposed to get the ride_length by calculate the time difference, but I already did that in the spreadsheet of the dataset
#So we will just go ahead to check if there is any missing value in our ride_length column
which(is.na(df$ride_length))
as.numeric(df$ride_length)
df_all$date <- as.Date(df_all$started_at)
df_all$month <- format(as.Date(df_all$date), "%m")
df_all$day <- format(as.Date(df_all$date), "%d")
df_all$year <- format(as.Date(df_all$date), "%Y")
df_all$day_of_week <- format(as.Date(df_all$date), "%A")
as.numeric(df$ride_length)
df_all$date <- as.Date(df$started_at)
df_all$month <- format(as.Date(df$date), "%m")
df_all$day <- format(as.Date(df$date), "%d")
df_all$year <- format(as.Date(df$date), "%Y")
df_all$day_of_week <- format(as.Date(df$date), "%A")
as.numeric(df$ride_length)
df$date <- as.Date(df$started_at)
df$month <- format(as.Date(df$date), "%m")
df$day <- format(as.Date(df$date), "%d")
df$year <- format(as.Date(df$date), "%Y")
df$day_of_week <- format(as.Date(df$date), "%A")
as.numeric(df$ride_length)
df$date <- as.Date(df$ride_length)
df$month <- format(as.Date(df$date), "%m")
df$day <- format(as.Date(df$date), "%d")
df$year <- format(as.Date(df$date), "%Y")
df$day_of_week <- format(as.Date(df$date), "%A")
#From here we can see that our column does not have any missing value
ride_length <- as.numeric(df$ride_length)
library(taRifx)
ride_length <- as.numeric(df$ride_length)
Warning message:
NAs introduced by coercion
ride_length <- destring(df$ride_length)
ride_length <- as.numeric(df$ride_length)
library(taRifx)
ride_length <- destring(df$ride_length)
ride_length <- as.numeric(df$ride_length)
library(taRifx)
ride_length <- gsub(c(df$ride_length))
ride_length <- gsub(df$ride_length)
#From here we can see that our column does not have any missing value
ride_length <- as.numeric(df$ride_length)
#From here we can see that our column does not have any missing value
ride_length <- as.numeric(df$ride_length)
df$date <- as.Date(df$ride_length)
library(stringr)
#From here we can see that our column does not have any missing value
ride_length <- as.numeric(str_extract(df$ride_length))
#From here we can see that our column does not have any missing value
ride_length <- as.numeric(str_extract(df$ride_length "[\\d]"))
df <- df %>%
mutate(ride_length = as.numeric(ended_at-started_at),
ended_at = ymd_hms(ended_at),
started_at = ymd_hms(started_at),
day = factor(weekdays(started_at), c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday")),
member_casual = as.factor(member_casual))
df <- df %>%
mutate(ride_length = as.numeric(ride_length),
ride_length = ymd_hms(ride_length),
day = factor(weekdays(started_at), c("Monday", "Tuesday", "Wednesday", "Thursday","Friday", "Saturday", "Sunday")),
member_casual = as.factor(member_casual))
df$ride_length <- replace(df$ride_length, which(df$ride_length < 0), NA)
df %>% group_by(member_casual) %>%
summarise(Mean_length = mean(ride_length, na.rm = T),
Mode_weekday = DescTools::Mode(day),
Mode_month = DescTools::Mode(month(started_at, label = T)),
Mean_distance = mean(distance, na.rm = T))
#loading our dataset
df1 <- read_csv('Cyclistic_Bike-Share_Dataset/202008-divvy-tripdata.csv')
df1 <- as.numeric(df1$ride_length)
table(df$member_casual)
ggplot(data=df) +
geom_bar(mapping=aes(x=member_casual,fill=member_casual)) +
scale_fill_brewer(palette="Set3") +
labs(title = "Number of Rides per User Type", x="User Type", y="Number of Rides", fill="User Type") +
theme_light()
options(repr.plot.width = 24, repr.plot.height = 8)
ggplot(data=tripdata_all_clean) +
geom_bar(mapping=aes(x=year_month, fill=member_casual)) +
labs(title = "Rides per Month per User Type", x="Month", y="Number of Rides", fill="User Type") +
scale_fill_brewer(palette="Set3") +
theme_light()
options(repr.plot.width = 24, repr.plot.height = 8)
ggplot(data=df) +
geom_bar(mapping=aes(x=year_month, fill=member_casual)) +
labs(title = "Rides per Month per User Type", x="Month", y="Number of Rides", fill="User Type") +
scale_fill_brewer(palette="Set3") +
theme_light()
df$date <- as.Date(df$started_at)
df$month <- format(as.Date(df$date), "%m")
df$day <- format(as.Date(df$date), "%d")
df$year <- format(as.Date(df$date), "%Y")
df$year_month <- format(as.Date(df$date), "%Y-%m")
df$day_of_week <- format(as.Date(df$date), "%A")
options(repr.plot.width = 24, repr.plot.height = 8)
ggplot(data=df) +
geom_bar(mapping=aes(x=year_month, fill=member_casual)) +
labs(title = "Rides per Month per User Type", x="Month", y="Number of Rides", fill="User Type") +
scale_fill_brewer(palette="Set3") +
theme_light()
